@page "/"
@using CrossCountrySkis.Models
@using CrossCountrySkis.Models.Enums
@using CrossCountrySkis.Services.Interfaces
@rendermode InteractiveServer
@inject ISkiService SkiService

<PageTitle>Home</PageTitle>

<h1>Ski length calculator</h1>

<div>
    Please select parameters to get recommendations for your ski length:

    <EditForm FormName="SkiLengthForm" Model="@_formModel" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div>
            <label>Length:</label>
            <InputNumber class="form-control" @bind-Value="_formModel.Length" />
        </div>
        <div>
            <label>Age:</label>
            <InputNumber class="form-control" @bind-Value="_formModel.Age" />
        </div>
        <div>
            <label>Ski type:</label>

            <InputRadioGroup @bind-Value="_formModel.SkiType">
                @foreach (var skiType in Enum.GetValues<SkiType>())
                {
                    <div>
                        <label>
                            <InputRadio Value="skiType" />
                            @skiType
                        </label>
                    </div>
                }
            </InputRadioGroup>
        </div>

        <button class="btn btn-primary" type="submit">Submit</button>
    </EditForm>

    @if(_result is not null)
    {
        <div>
            Your suggested ski length: @(_result.SkiLengthSpan is not null ? $"{_result.SkiLengthSpan.LowerSpan}-{_result.SkiLengthSpan.UpperSpan}" : _result.SkiLength)
        </div>
    }
</div>

@code {
    private SkiLengthFormModel _formModel = new();
    private SuggestedSkiLengthResult? _result;

    private void HandleValidSubmit()
    {
        _result = SkiService.CalculateSkiLength(_formModel);
    }
}
